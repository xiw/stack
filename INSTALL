Prerequisites
-------------

To build STACK from source code, you need the development version of
Clang and LLVM, as detailed at:

	http://clang.llvm.org/get_started.html

We use the following parameters to LLVM's configure:

	--enable-cxx11 --enable-targets=host --enable-bindings=none --enable-shared --enable-debug-symbols --enable-optimized

If you prefer to install Clang and LLVM in a directory other than
/usr/local, also pass --prefix=... to its configure, and add that
directory to your PATH.

Then run in the LLVM build directory:

	$ make install

This will install Clang and LLVM.  To use them, prepend their bin
directory to PATH.

Using distribution packages
---------------------------
STACK can be built against distribution-provided LLVM packages.
On Ubuntu, install the needed packages:

	$ apt-get install clang3.3 libclang-3.3-dev

STACK uses llvm-config and opt, but Ubuntu only installs versioned
versions of these commands. Add symlinks for them:

	$ sudo ln -s /usr/bin/llvm-config-3.3 /usr/local/bin/llvm-config
	$ sudo ln -s /usr/bin/opt-3.3 /usr/local/bin/opt

After that, STACK can be built as described below.

STACK
-----

You need to choose an SMT solver for constraint solving.  The default
one is Boolector, which is released under GPL.  If you need a more
liberal license, see "Use other solvers".

Build STACK in its source root directory.

If building from git, first do:

	$ autoreconf -fvi

Then configure and make.

	$ mkdir build
	$ cd build
	$ ../configure
	$ make

Finally, add `<STACK_ROOT>/build/bin` to PATH.


Use other solvers
-----------------

By default, STACK links to the Boolector solver v1.5.116 [1], which
is released under GPLv3.  If you want to use the MIT license, choose
other solvers.

One option is the STP solver [2], which uses the MIT license.
Download and build STP, and you should get the executable `stp`.
Then, add the following parameter to STACK's configure:

	--with-smtlib="path/to/stp --SMTLIB2"

[1] Boolector. http://fmv.jku.at/boolector/
[2] STP. https://sites.google.com/site/stpfastprover/

config.name             = "@PACKAGE@"
config.test_format      = lit.formats.ShTest()
config.suffixes         = ['.c', '.cc']

config.target_triple    = "@host@"
config.test_exec_root   = "@abs_builddir@"
config.test_source_root = "@abs_srcdir@"

import os, os.path

if 'LLVMCC' in os.environ:
	config.environment['LLVMCC'] = os.getenv('LLVMCC')

llvm_obj_root = lit.util.capture(['llvm-config', '--obj-root']).strip()
llvm_build_mode = lit.util.capture(['llvm-config', '--build-mode']).strip()
llvm_bindir = os.path.join(llvm_obj_root, llvm_build_mode, 'bin')

stack_srcdir = "@abs_top_srcdir@"
stack_builddir = "@abs_top_builddir@"

cc1     = os.path.join(stack_builddir, 'test', 'cc1')
cc      = cc1 + ' -c -o -'
linuxcc = cc1 + ' -nostdinc -fno-builtin -c -o -'

optck = os.path.join(stack_builddir, 'src', 'optck', 'optck')
diagdiff = os.path.join(stack_srcdir, 'test', 'diagdiff')

config.substitutions.append( ('%cc', cc) )
config.substitutions.append( ('%linuxcc', linuxcc) )

config.substitutions.append( ('%optck', optck) )
config.substitutions.append( ('%diagdiff', diagdiff) )
